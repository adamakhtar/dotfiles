;; main contains multiple manipulators
;; each manipulator has a description and multiple rules

;; main                -> {:main [{:des "..." :rules [rule1 rule2 ...]}]}
;; manipulator         -> {:des "..." :rules [rule1 rule2 ...]}
;; manipulator's rules -> [rule1 rule2 ...]
{
  :alone 500
  :delay 200
  :held 500
  :sim 200
  :simlayer-threshold 222
  :modifiers {;
    :super-hyper [:command :shift :control :option :fn]
    :hyper [:command :shift :control :option]
    :cos [:command :shift :option]
    :cst [:command :shift :control]
    :co [:command :option]
    :cs [:command :shift]
    :ct [:command :control]
    :to [:control :option]
    :ts [:control :shift]
    :os [:option :shift]
    ;
  }
  :applications {
    :code ["com.microsoft.VSCode"]
  }


  :simlayers {
    :a--alt-mode {:key :a}
    :s--alt-shift-mode {:key :s}
    :d--mode {:key :d}
    :v--mode {:key :v}
    :n--mode {:key :n}
    :g--cursor-mode {:key :g}
    :f--movement-mode {:key :f}
  }
  :templates {
    :launch "osascript -e 'tell application \"%s\" to activate'"
  }

  :tos {
    :expand_selection {:key :right_arrow :modi :cst}
    :shrink_selection {:key :left_arrow :modi :cst}
    :cursor_find_match {:key :d :modi :command}
    :cursor_above {:key :up_arrow :modi :co}
    :cursor_below {:key :down_arrow :modi :co}
    :acejump {:key :j :modi :cos}
    :acejump_line {:key :l :modi :cos}
    :acejump_selection {:key :s :modi :cos}
    :acejump_multi {:key :m :modi :cos}
  }

  :main [
    {:des "caps lock"
     :rules [
       [:caps_lock :!!spacebar]
     ]
    }
    {:des "code"
      :rules [
        [:condi :code :n--mode]
        [:a :close_bracket] ; [
        [:s :!Sclose_bracket] ; {
        [:d :!Sbackslash] ; }
        [:f :backslash] ; ]
        [:g :international1] ; _

        [:condi :code :v--mode]
        [:h, :hyphen] ; -
        [:j, :!S8] ; (
        [:k, :!S9] ; )

        ; [:condi :code :g--mode]
        ; [:j, [:spacebar :!Shyphen :spacebar]] ; =
        ; [:k, [:!S2 :!S2 :left_arrow]] ; ""
        ; [:l, [:spacebar :!Shyphen :!Speriod :spacebar]] ; =>
      ]
    }
    {:des "homerow cursor movement"
      :rules [:f--movement-mode
        [:condi :code :f--movement-mode]
        [:##y :!Cleft_arrow] ; move to start of line
        [:##u :!Oleft_arrow] ; move one word left
        [:##i :!Oright_arrow] ; move one word right
        [:##o :!Cright_arrow] ; move to end of line
        [:##h :left_arrow]
        [:##j :down_arrow]
        [:##k :up_arrow]
        [:##l :right_arrow]


      ]
    }
    {:des "homerow alt+shift"
      :rules [:s--alt-shift-mode
        [:##h :!OSleft_arrow]
        [:##j :!OSdown_arrow]
        [:##k :!OSup_arrow]
        [:##l :!OSright_arrow]
        ;
    ]}

    {:des "homerow shift"
      :rules [:d--mode
        [:##y :!Shome]
        [:##o :!Send]

        [:##h :!Sleft_arrow]
        [:##j :!Sdown_arrow]
        [:##k :!Sup_arrow]
        [:##l :!Sright_arrow]
    ]}

    {:des "homerow alt"
      :rules [:a--alt-mode
      [:##h :!Oleft_arrow]
      [:##j :!Odown_arrow]
      [:##k :!Oup_arrow]
      [:##l :!Oright_arrow]
      ;
    ]}

    {:des "homerow cursor"
      :rules [:g--cursor-mode
              [:h :cursor_find_match]
              [:j :cursor_below]
              [:k :cursor_above]
              ; [:u :acejump]
              ; [:i :acejump_line]
              ; [:m :acejump_multi]
              ; [:left_shift :acejump_selection]
              ]
     }

    {:des "lauch mode"
      :rules [:d--mode
      [:v [:launch "Visual Studio Code"]]    ;
      [:s [:launch "Slack"]]    ;
      [:i [:launch "iTerm"]]    ;
      [:t [:launch "Sourcetree"]]    ;
      [:b [:launch "Firefox"]]    ;
    ]}

    ; {:des "disabled keys"
    ;   :rules [
    ;     [:left_arrow :vk_none]
    ;     [:right_arrow :vk_none]
    ;     [:down_arrow :vk_none]
    ;     [:up_arrow :vk_none]
    ;   ]
    ; }
  ]
}




; rule [:period ["media-mode" 1] nil {:afterup ["media-mode" 0] :alone :period}]
;;       |_____| |_______________| |_| |_________________________________________|
;;        <from>    <to>      <conditions>         <other options>

    ;; !  | means mandatory
    ;; #  | means optional
    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;;
    ;; !! | mandatory command + control + optional + shift (hyper)
    ;; ## | optional any
;;